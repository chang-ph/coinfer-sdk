/**
 * Coinfer Server API
 *  This part of document describes the HTTP APIs of the Coinfer cloud.  
 *
 * OpenAPI spec version: 0.0.1747269724+a7f6527
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CreateExperimentShareRsp } from '../models/CreateExperimentShareRsp';
import { ExperimentRsp } from '../models/ExperimentRsp';
import { ListModelsRspItem } from '../models/ListModelsRspItem';
import { ModelMetaInRsp } from '../models/ModelMetaInRsp';
import { ShareInfoModel } from '../models/ShareInfoModel';
import { HttpFile } from '../http/http';

export class Data1 {
    'objectType': Data1ObjectTypeEnum;
    'shortId': string;
    'name': string;
    'modelId'?: string;
    'status'?: string;
    'meta': ModelMetaInRsp;
    'nChains'?: number;
    'nVariables'?: number;
    'nSamples'?: number;
    'sampleUpdateTime'?: Date;
    'runOn'?: string;
    'input'?: string;
    'output'?: string;
    'shareInfo'?: Array<ShareInfoModel>;
    'modelName': string;
    'id': number;
    'env': string;
    'content'?: any | null;
    'userId': number;
    'experimentId': string;
    'experimentName': string;
    'password': string;
    'createdAt': Date;
    'fromUser'?: string;
    'toUser'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "objectType",
            "baseName": "object_type",
            "type": "Data1ObjectTypeEnum",
            "format": ""
        },
        {
            "name": "shortId",
            "baseName": "short_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "modelId",
            "baseName": "model_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string",
            "format": ""
        },
        {
            "name": "meta",
            "baseName": "meta",
            "type": "ModelMetaInRsp",
            "format": ""
        },
        {
            "name": "nChains",
            "baseName": "n_chains",
            "type": "number",
            "format": ""
        },
        {
            "name": "nVariables",
            "baseName": "n_variables",
            "type": "number",
            "format": ""
        },
        {
            "name": "nSamples",
            "baseName": "n_samples",
            "type": "number",
            "format": ""
        },
        {
            "name": "sampleUpdateTime",
            "baseName": "sample_update_time",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "runOn",
            "baseName": "run_on",
            "type": "string",
            "format": ""
        },
        {
            "name": "input",
            "baseName": "input",
            "type": "string",
            "format": ""
        },
        {
            "name": "output",
            "baseName": "output",
            "type": "string",
            "format": ""
        },
        {
            "name": "shareInfo",
            "baseName": "share_info",
            "type": "Array<ShareInfoModel>",
            "format": ""
        },
        {
            "name": "modelName",
            "baseName": "model_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": ""
        },
        {
            "name": "env",
            "baseName": "env",
            "type": "string",
            "format": ""
        },
        {
            "name": "content",
            "baseName": "content",
            "type": "any",
            "format": ""
        },
        {
            "name": "userId",
            "baseName": "user_id",
            "type": "number",
            "format": ""
        },
        {
            "name": "experimentId",
            "baseName": "experiment_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "experimentName",
            "baseName": "experiment_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "password",
            "baseName": "password",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "fromUser",
            "baseName": "from_user",
            "type": "string",
            "format": ""
        },
        {
            "name": "toUser",
            "baseName": "to_user",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Data1.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum Data1ObjectTypeEnum {
    Experiment = 'experiment'
}

