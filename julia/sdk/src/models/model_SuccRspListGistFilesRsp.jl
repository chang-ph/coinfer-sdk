# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SuccRsp_ListGistFilesRsp_

    SuccRspListGistFilesRsp(;
        status=nothing,
        data=nothing,
    )

    - status::String
    - data::ListGistFilesRsp
"""
Base.@kwdef mutable struct SuccRspListGistFilesRsp <: OpenAPI.APIModel
    status::Union{Nothing, String} = nothing
    data = nothing # spec type: Union{ Nothing, ListGistFilesRsp }

    function SuccRspListGistFilesRsp(status, data, )
        OpenAPI.validate_property(SuccRspListGistFilesRsp, Symbol("status"), status)
        OpenAPI.validate_property(SuccRspListGistFilesRsp, Symbol("data"), data)
        return new(status, data, )
    end
end # type SuccRspListGistFilesRsp

const _property_types_SuccRspListGistFilesRsp = Dict{Symbol,String}(Symbol("status")=>"String", Symbol("data")=>"ListGistFilesRsp", )
OpenAPI.property_type(::Type{ SuccRspListGistFilesRsp }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SuccRspListGistFilesRsp[name]))}

function check_required(o::SuccRspListGistFilesRsp)
    o.status === nothing && (return false)
    o.data === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ SuccRspListGistFilesRsp }, name::Symbol, val)

    if name === Symbol("status")
        OpenAPI.validate_param(name, "SuccRspListGistFilesRsp", :enum, val, ["ok"])
    end


end
