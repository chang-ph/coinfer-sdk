# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdateWorkflowReq

    UpdateWorkflowReq(;
        object_type=nothing,
        name=nothing,
        description=nothing,
    )

    - object_type::String
    - name::String
    - description::String
"""
Base.@kwdef mutable struct UpdateWorkflowReq <: OpenAPI.APIModel
    object_type::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing

    function UpdateWorkflowReq(object_type, name, description, )
        OpenAPI.validate_property(UpdateWorkflowReq, Symbol("object_type"), object_type)
        OpenAPI.validate_property(UpdateWorkflowReq, Symbol("name"), name)
        OpenAPI.validate_property(UpdateWorkflowReq, Symbol("description"), description)
        return new(object_type, name, description, )
    end
end # type UpdateWorkflowReq

const _property_types_UpdateWorkflowReq = Dict{Symbol,String}(Symbol("object_type")=>"String", Symbol("name")=>"String", Symbol("description")=>"String", )
OpenAPI.property_type(::Type{ UpdateWorkflowReq }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpdateWorkflowReq[name]))}

function check_required(o::UpdateWorkflowReq)
    o.object_type === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UpdateWorkflowReq }, name::Symbol, val)

    if name === Symbol("object_type")
        OpenAPI.validate_param(name, "UpdateWorkflowReq", :enum, val, ["workflow"])
    end



    if name === Symbol("description")
        OpenAPI.validate_param(name, "UpdateWorkflowReq", :maxLength, val, 2048)
    end
end