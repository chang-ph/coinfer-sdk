# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdateEventReq

    UpdateEventReq(;
        object_type=nothing,
        params="",
        engine="lambda",
        lock_key="",
    )

    - object_type::String
    - params::String
    - engine::String
    - lock_key::String : lock key provided by user. It is combined with the cloudfunction_id to form the real lock key when running cloudfunction triggered by this event.  Sometimes, users may want CloudFunctions to run exclusively, but not just one instance globally. For example, when running a CloudFunction specific to an experiment, users may want only one instance of that CloudFunction to run simultaneously for that experiment. In this case, users can specify the lock_key as the experiment_id.
"""
Base.@kwdef mutable struct UpdateEventReq <: OpenAPI.APIModel
    object_type::Union{Nothing, String} = nothing
    params::Union{Nothing, String} = ""
    engine::Union{Nothing, String} = "lambda"
    lock_key::Union{Nothing, String} = ""

    function UpdateEventReq(object_type, params, engine, lock_key, )
        OpenAPI.validate_property(UpdateEventReq, Symbol("object_type"), object_type)
        OpenAPI.validate_property(UpdateEventReq, Symbol("params"), params)
        OpenAPI.validate_property(UpdateEventReq, Symbol("engine"), engine)
        OpenAPI.validate_property(UpdateEventReq, Symbol("lock_key"), lock_key)
        return new(object_type, params, engine, lock_key, )
    end
end # type UpdateEventReq

const _property_types_UpdateEventReq = Dict{Symbol,String}(Symbol("object_type")=>"String", Symbol("params")=>"String", Symbol("engine")=>"String", Symbol("lock_key")=>"String", )
OpenAPI.property_type(::Type{ UpdateEventReq }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpdateEventReq[name]))}

function check_required(o::UpdateEventReq)
    o.object_type === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UpdateEventReq }, name::Symbol, val)

    if name === Symbol("object_type")
        OpenAPI.validate_param(name, "UpdateEventReq", :enum, val, ["event"])
    end



    if name === Symbol("engine")
        OpenAPI.validate_param(name, "UpdateEventReq", :enum, val, ["lambda", "fargate"])
    end


end
