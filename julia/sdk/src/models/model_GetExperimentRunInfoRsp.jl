# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GetExperimentRunInfoRsp

    GetExperimentRunInfoRsp(;
        object_type=nothing,
        status=nothing,
    )

    - object_type::String
    - status::String
"""
Base.@kwdef mutable struct GetExperimentRunInfoRsp <: OpenAPI.APIModel
    object_type::Union{Nothing, String} = nothing
    status::Union{Nothing, String} = nothing

    function GetExperimentRunInfoRsp(object_type, status, )
        OpenAPI.validate_property(GetExperimentRunInfoRsp, Symbol("object_type"), object_type)
        OpenAPI.validate_property(GetExperimentRunInfoRsp, Symbol("status"), status)
        return new(object_type, status, )
    end
end # type GetExperimentRunInfoRsp

const _property_types_GetExperimentRunInfoRsp = Dict{Symbol,String}(Symbol("object_type")=>"String", Symbol("status")=>"String", )
OpenAPI.property_type(::Type{ GetExperimentRunInfoRsp }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetExperimentRunInfoRsp[name]))}

function check_required(o::GetExperimentRunInfoRsp)
    o.object_type === nothing && (return false)
    o.status === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetExperimentRunInfoRsp }, name::Symbol, val)

    if name === Symbol("object_type")
        OpenAPI.validate_param(name, "GetExperimentRunInfoRsp", :enum, val, ["experiment.run_info"])
    end


end