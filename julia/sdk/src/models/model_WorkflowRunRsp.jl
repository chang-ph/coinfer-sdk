# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""WorkflowRunRsp

    WorkflowRunRsp(;
        object_type=nothing,
        experiment_id=nothing,
        experiment_name=nothing,
    )

    - object_type::String
    - experiment_id::String
    - experiment_name::String
"""
Base.@kwdef mutable struct WorkflowRunRsp <: OpenAPI.APIModel
    object_type::Union{Nothing, String} = nothing
    experiment_id::Union{Nothing, String} = nothing
    experiment_name::Union{Nothing, String} = nothing

    function WorkflowRunRsp(object_type, experiment_id, experiment_name, )
        OpenAPI.validate_property(WorkflowRunRsp, Symbol("object_type"), object_type)
        OpenAPI.validate_property(WorkflowRunRsp, Symbol("experiment_id"), experiment_id)
        OpenAPI.validate_property(WorkflowRunRsp, Symbol("experiment_name"), experiment_name)
        return new(object_type, experiment_id, experiment_name, )
    end
end # type WorkflowRunRsp

const _property_types_WorkflowRunRsp = Dict{Symbol,String}(Symbol("object_type")=>"String", Symbol("experiment_id")=>"String", Symbol("experiment_name")=>"String", )
OpenAPI.property_type(::Type{ WorkflowRunRsp }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_WorkflowRunRsp[name]))}

function check_required(o::WorkflowRunRsp)
    o.object_type === nothing && (return false)
    o.experiment_id === nothing && (return false)
    o.experiment_name === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ WorkflowRunRsp }, name::Symbol, val)

    if name === Symbol("object_type")
        OpenAPI.validate_param(name, "WorkflowRunRsp", :enum, val, ["workflow.run"])
    end



end