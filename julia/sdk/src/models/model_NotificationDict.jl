# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""NotificationDict

    NotificationDict(;
        id=nothing,
        event=nothing,
        title=nothing,
        message=nothing,
        msg_object=nothing,
        msg_verb=nothing,
        created_at=nothing,
        read_at=nothing,
    )

    - id::Int64
    - event::String
    - title::String
    - message::String
    - msg_object::String
    - msg_verb::String
    - created_at::String
    - read_at::String
"""
Base.@kwdef mutable struct NotificationDict <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = nothing
    event::Union{Nothing, String} = nothing
    title::Union{Nothing, String} = nothing
    message::Union{Nothing, String} = nothing
    msg_object::Union{Nothing, String} = nothing
    msg_verb::Union{Nothing, String} = nothing
    created_at::Union{Nothing, String} = nothing
    read_at::Union{Nothing, String} = nothing

    function NotificationDict(id, event, title, message, msg_object, msg_verb, created_at, read_at, )
        OpenAPI.validate_property(NotificationDict, Symbol("id"), id)
        OpenAPI.validate_property(NotificationDict, Symbol("event"), event)
        OpenAPI.validate_property(NotificationDict, Symbol("title"), title)
        OpenAPI.validate_property(NotificationDict, Symbol("message"), message)
        OpenAPI.validate_property(NotificationDict, Symbol("msg_object"), msg_object)
        OpenAPI.validate_property(NotificationDict, Symbol("msg_verb"), msg_verb)
        OpenAPI.validate_property(NotificationDict, Symbol("created_at"), created_at)
        OpenAPI.validate_property(NotificationDict, Symbol("read_at"), read_at)
        return new(id, event, title, message, msg_object, msg_verb, created_at, read_at, )
    end
end # type NotificationDict

const _property_types_NotificationDict = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("event")=>"String", Symbol("title")=>"String", Symbol("message")=>"String", Symbol("msg_object")=>"String", Symbol("msg_verb")=>"String", Symbol("created_at")=>"String", Symbol("read_at")=>"String", )
OpenAPI.property_type(::Type{ NotificationDict }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_NotificationDict[name]))}

function check_required(o::NotificationDict)
    o.id === nothing && (return false)
    o.event === nothing && (return false)
    o.title === nothing && (return false)
    o.message === nothing && (return false)
    o.msg_object === nothing && (return false)
    o.msg_verb === nothing && (return false)
    o.created_at === nothing && (return false)
    o.read_at === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ NotificationDict }, name::Symbol, val)








end