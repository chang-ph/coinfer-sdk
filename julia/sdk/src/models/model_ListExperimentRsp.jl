# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ListExperimentRsp

    ListExperimentRsp(;
        short_id=nothing,
        name=nothing,
        model_id=nothing,
        status=nothing,
        meta=nothing,
        n_chains=nothing,
        n_variables=nothing,
        n_samples=nothing,
        sample_update_time=nothing,
        run_on=nothing,
        share_info=nothing,
        model_name=nothing,
    )

    - short_id::String
    - name::String
    - model_id::String
    - status::String
    - meta::MetaModel
    - n_chains::Int64
    - n_variables::Int64
    - n_samples::Int64
    - sample_update_time::ZonedDateTime
    - run_on::String
    - share_info::Vector{ShareInfoModel}
    - model_name::String
"""
Base.@kwdef mutable struct ListExperimentRsp <: OpenAPI.APIModel
    short_id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    model_id::Union{Nothing, String} = nothing
    status::Union{Nothing, String} = nothing
    meta = nothing # spec type: Union{ Nothing, MetaModel }
    n_chains::Union{Nothing, Int64} = nothing
    n_variables::Union{Nothing, Int64} = nothing
    n_samples::Union{Nothing, Int64} = nothing
    sample_update_time::Union{Nothing, ZonedDateTime} = nothing
    run_on::Union{Nothing, String} = nothing
    share_info::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ShareInfoModel} }
    model_name::Union{Nothing, String} = nothing

    function ListExperimentRsp(short_id, name, model_id, status, meta, n_chains, n_variables, n_samples, sample_update_time, run_on, share_info, model_name, )
        OpenAPI.validate_property(ListExperimentRsp, Symbol("short_id"), short_id)
        OpenAPI.validate_property(ListExperimentRsp, Symbol("name"), name)
        OpenAPI.validate_property(ListExperimentRsp, Symbol("model_id"), model_id)
        OpenAPI.validate_property(ListExperimentRsp, Symbol("status"), status)
        OpenAPI.validate_property(ListExperimentRsp, Symbol("meta"), meta)
        OpenAPI.validate_property(ListExperimentRsp, Symbol("n_chains"), n_chains)
        OpenAPI.validate_property(ListExperimentRsp, Symbol("n_variables"), n_variables)
        OpenAPI.validate_property(ListExperimentRsp, Symbol("n_samples"), n_samples)
        OpenAPI.validate_property(ListExperimentRsp, Symbol("sample_update_time"), sample_update_time)
        OpenAPI.validate_property(ListExperimentRsp, Symbol("run_on"), run_on)
        OpenAPI.validate_property(ListExperimentRsp, Symbol("share_info"), share_info)
        OpenAPI.validate_property(ListExperimentRsp, Symbol("model_name"), model_name)
        return new(short_id, name, model_id, status, meta, n_chains, n_variables, n_samples, sample_update_time, run_on, share_info, model_name, )
    end
end # type ListExperimentRsp

const _property_types_ListExperimentRsp = Dict{Symbol,String}(Symbol("short_id")=>"String", Symbol("name")=>"String", Symbol("model_id")=>"String", Symbol("status")=>"String", Symbol("meta")=>"MetaModel", Symbol("n_chains")=>"Int64", Symbol("n_variables")=>"Int64", Symbol("n_samples")=>"Int64", Symbol("sample_update_time")=>"ZonedDateTime", Symbol("run_on")=>"String", Symbol("share_info")=>"Vector{ShareInfoModel}", Symbol("model_name")=>"String", )
OpenAPI.property_type(::Type{ ListExperimentRsp }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ListExperimentRsp[name]))}

function check_required(o::ListExperimentRsp)
    o.short_id === nothing && (return false)
    o.name === nothing && (return false)
    o.status === nothing && (return false)
    o.n_chains === nothing && (return false)
    o.n_variables === nothing && (return false)
    o.n_samples === nothing && (return false)
    o.sample_update_time === nothing && (return false)
    o.run_on === nothing && (return false)
    o.model_name === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ListExperimentRsp }, name::Symbol, val)









    if name === Symbol("sample_update_time")
        OpenAPI.validate_param(name, "ListExperimentRsp", :format, val, "date-time")
    end



end
