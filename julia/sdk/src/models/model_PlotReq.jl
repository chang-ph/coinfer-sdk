# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PlotReq

    PlotReq(;
        coinfer_auth_token="",
        coinfer_share_password="",
        experiment_id=nothing,
        plot_func=nothing,
        plot_chain=nothing,
        plot_var=nothing,
        n_iteration=0,
    )

    - coinfer_auth_token::String
    - coinfer_share_password::String
    - experiment_id::String
    - plot_func::String
    - plot_chain::String
    - plot_var::String
    - n_iteration::Int64
"""
Base.@kwdef mutable struct PlotReq <: OpenAPI.APIModel
    coinfer_auth_token::Union{Nothing, String} = ""
    coinfer_share_password::Union{Nothing, String} = ""
    experiment_id::Union{Nothing, String} = nothing
    plot_func::Union{Nothing, String} = nothing
    plot_chain::Union{Nothing, String} = nothing
    plot_var::Union{Nothing, String} = nothing
    n_iteration::Union{Nothing, Int64} = 0

    function PlotReq(coinfer_auth_token, coinfer_share_password, experiment_id, plot_func, plot_chain, plot_var, n_iteration, )
        OpenAPI.validate_property(PlotReq, Symbol("coinfer_auth_token"), coinfer_auth_token)
        OpenAPI.validate_property(PlotReq, Symbol("coinfer_share_password"), coinfer_share_password)
        OpenAPI.validate_property(PlotReq, Symbol("experiment_id"), experiment_id)
        OpenAPI.validate_property(PlotReq, Symbol("plot_func"), plot_func)
        OpenAPI.validate_property(PlotReq, Symbol("plot_chain"), plot_chain)
        OpenAPI.validate_property(PlotReq, Symbol("plot_var"), plot_var)
        OpenAPI.validate_property(PlotReq, Symbol("n_iteration"), n_iteration)
        return new(coinfer_auth_token, coinfer_share_password, experiment_id, plot_func, plot_chain, plot_var, n_iteration, )
    end
end # type PlotReq

const _property_types_PlotReq = Dict{Symbol,String}(Symbol("coinfer_auth_token")=>"String", Symbol("coinfer_share_password")=>"String", Symbol("experiment_id")=>"String", Symbol("plot_func")=>"String", Symbol("plot_chain")=>"String", Symbol("plot_var")=>"String", Symbol("n_iteration")=>"Int64", )
OpenAPI.property_type(::Type{ PlotReq }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PlotReq[name]))}

function check_required(o::PlotReq)
    o.experiment_id === nothing && (return false)
    o.plot_func === nothing && (return false)
    o.plot_chain === nothing && (return false)
    o.plot_var === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ PlotReq }, name::Symbol, val)







end