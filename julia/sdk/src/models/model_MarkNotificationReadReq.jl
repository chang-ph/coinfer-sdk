# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""MarkNotificationReadReq

    MarkNotificationReadReq(;
        notification_ids=nothing,
        status=nothing,
    )

    - notification_ids::Vector{Int64}
    - status::String : the target status to be set
"""
Base.@kwdef mutable struct MarkNotificationReadReq <: OpenAPI.APIModel
    notification_ids::Union{Nothing, Vector{Int64}} = nothing
    status::Union{Nothing, String} = nothing

    function MarkNotificationReadReq(notification_ids, status, )
        OpenAPI.validate_property(MarkNotificationReadReq, Symbol("notification_ids"), notification_ids)
        OpenAPI.validate_property(MarkNotificationReadReq, Symbol("status"), status)
        return new(notification_ids, status, )
    end
end # type MarkNotificationReadReq

const _property_types_MarkNotificationReadReq = Dict{Symbol,String}(Symbol("notification_ids")=>"Vector{Int64}", Symbol("status")=>"String", )
OpenAPI.property_type(::Type{ MarkNotificationReadReq }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MarkNotificationReadReq[name]))}

function check_required(o::MarkNotificationReadReq)
    o.status === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ MarkNotificationReadReq }, name::Symbol, val)


    if name === Symbol("status")
        OpenAPI.validate_param(name, "MarkNotificationReadReq", :enum, val, ["read", "unread"])
    end

end
