# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.



@doc raw"""Payload_1

    Payload1(; value=nothing)
"""
mutable struct Payload1 <: OpenAPI.OneOfAPIModel
    value::Any # Union{ CreateNSampleStatReq, UpdateEventReq, UpdateExperiment, UpdateModel }
    Payload1() = new()
    Payload1(value) = new(value)
end # type Payload1

function OpenAPI.property_type(::Type{ Payload1 }, name::Symbol, json::Dict{String,Any})
    discriminator = json["object_type"]
    if discriminator == "event"
        return eval(Base.Meta.parse("UpdateEventReq"))
    elseif discriminator == "experiment"
        return eval(Base.Meta.parse("UpdateExperiment"))
    elseif discriminator == "experiment.nsample_stat"
        return eval(Base.Meta.parse("CreateNSampleStatReq"))
    elseif discriminator == "model"
        return eval(Base.Meta.parse("UpdateModel"))
    end
    throw(OpenAPI.ValidationException("Invalid discriminator value: $discriminator for Payload1"))
end
