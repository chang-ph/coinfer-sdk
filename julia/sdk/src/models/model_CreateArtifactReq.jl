# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CreateArtifactReq

    CreateArtifactReq(;
        object_type=nothing,
        name=nothing,
        description="",
        is_base64=false,
        data_file="",
        data_uri="",
    )

    - object_type::String
    - name::String : Artifact name
    - description::String : Artifact description
    - is_base64::Bool : Whether the data in &#x60;data_file&#x60; is base64 encoded
    - data_file::String : File data in text format
    - data_uri::String : File data URI
"""
Base.@kwdef mutable struct CreateArtifactReq <: OpenAPI.APIModel
    object_type::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = ""
    is_base64::Union{Nothing, Bool} = false
    data_file::Union{Nothing, String} = ""
    data_uri::Union{Nothing, String} = ""

    function CreateArtifactReq(object_type, name, description, is_base64, data_file, data_uri, )
        OpenAPI.validate_property(CreateArtifactReq, Symbol("object_type"), object_type)
        OpenAPI.validate_property(CreateArtifactReq, Symbol("name"), name)
        OpenAPI.validate_property(CreateArtifactReq, Symbol("description"), description)
        OpenAPI.validate_property(CreateArtifactReq, Symbol("is_base64"), is_base64)
        OpenAPI.validate_property(CreateArtifactReq, Symbol("data_file"), data_file)
        OpenAPI.validate_property(CreateArtifactReq, Symbol("data_uri"), data_uri)
        return new(object_type, name, description, is_base64, data_file, data_uri, )
    end
end # type CreateArtifactReq

const _property_types_CreateArtifactReq = Dict{Symbol,String}(Symbol("object_type")=>"String", Symbol("name")=>"String", Symbol("description")=>"String", Symbol("is_base64")=>"Bool", Symbol("data_file")=>"String", Symbol("data_uri")=>"String", )
OpenAPI.property_type(::Type{ CreateArtifactReq }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreateArtifactReq[name]))}

function check_required(o::CreateArtifactReq)
    o.object_type === nothing && (return false)
    o.name === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ CreateArtifactReq }, name::Symbol, val)

    if name === Symbol("object_type")
        OpenAPI.validate_param(name, "CreateArtifactReq", :enum, val, ["artifact"])
    end


    if name === Symbol("name")
        OpenAPI.validate_param(name, "CreateArtifactReq", :maxLength, val, 255)
        OpenAPI.validate_param(name, "CreateArtifactReq", :minLength, val, 1)
    end

    if name === Symbol("description")
        OpenAPI.validate_param(name, "CreateArtifactReq", :maxLength, val, 2048)
    end



end