# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ViewExperimentShareRsp

    ViewExperimentShareRsp(;
        object_type=nothing,
        require_password=nothing,
    )

    - object_type::String
    - require_password::Bool
"""
Base.@kwdef mutable struct ViewExperimentShareRsp <: OpenAPI.APIModel
    object_type::Union{Nothing, String} = nothing
    require_password::Union{Nothing, Bool} = nothing

    function ViewExperimentShareRsp(object_type, require_password, )
        OpenAPI.validate_property(ViewExperimentShareRsp, Symbol("object_type"), object_type)
        OpenAPI.validate_property(ViewExperimentShareRsp, Symbol("require_password"), require_password)
        return new(object_type, require_password, )
    end
end # type ViewExperimentShareRsp

const _property_types_ViewExperimentShareRsp = Dict{Symbol,String}(Symbol("object_type")=>"String", Symbol("require_password")=>"Bool", )
OpenAPI.property_type(::Type{ ViewExperimentShareRsp }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ViewExperimentShareRsp[name]))}

function check_required(o::ViewExperimentShareRsp)
    o.object_type === nothing && (return false)
    o.require_password === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ViewExperimentShareRsp }, name::Symbol, val)

    if name === Symbol("object_type")
        OpenAPI.validate_param(name, "ViewExperimentShareRsp", :enum, val, ["share"])
    end


end
