# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdateModel

    UpdateModel(;
        object_type=nothing,
        content=nothing,
        name=nothing,
        version=nothing,
        description=nothing,
        status=nothing,
        lambda_image=nothing,
        tags=nothing,
    )

    - object_type::String
    - content::ModelContent
    - name::String
    - version::String
    - description::String
    - status::String
    - lambda_image::Bool
    - tags::Vector{String}
"""
Base.@kwdef mutable struct UpdateModel <: OpenAPI.APIModel
    object_type::Union{Nothing, String} = nothing
    content = nothing # spec type: Union{ Nothing, ModelContent }
    name::Union{Nothing, String} = nothing
    version::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    status::Union{Nothing, String} = nothing
    lambda_image::Union{Nothing, Bool} = nothing
    tags::Union{Nothing, Vector{String}} = nothing

    function UpdateModel(object_type, content, name, version, description, status, lambda_image, tags, )
        OpenAPI.validate_property(UpdateModel, Symbol("object_type"), object_type)
        OpenAPI.validate_property(UpdateModel, Symbol("content"), content)
        OpenAPI.validate_property(UpdateModel, Symbol("name"), name)
        OpenAPI.validate_property(UpdateModel, Symbol("version"), version)
        OpenAPI.validate_property(UpdateModel, Symbol("description"), description)
        OpenAPI.validate_property(UpdateModel, Symbol("status"), status)
        OpenAPI.validate_property(UpdateModel, Symbol("lambda_image"), lambda_image)
        OpenAPI.validate_property(UpdateModel, Symbol("tags"), tags)
        return new(object_type, content, name, version, description, status, lambda_image, tags, )
    end
end # type UpdateModel

const _property_types_UpdateModel = Dict{Symbol,String}(Symbol("object_type")=>"String", Symbol("content")=>"ModelContent", Symbol("name")=>"String", Symbol("version")=>"String", Symbol("description")=>"String", Symbol("status")=>"String", Symbol("lambda_image")=>"Bool", Symbol("tags")=>"Vector{String}", )
OpenAPI.property_type(::Type{ UpdateModel }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpdateModel[name]))}

function check_required(o::UpdateModel)
    o.object_type === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UpdateModel }, name::Symbol, val)

    if name === Symbol("object_type")
        OpenAPI.validate_param(name, "UpdateModel", :enum, val, ["model"])
    end








end