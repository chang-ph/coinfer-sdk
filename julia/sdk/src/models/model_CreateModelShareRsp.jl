# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CreateModelShareRsp

    CreateModelShareRsp(;
        id=nothing,
        model_id=nothing,
        model_name=nothing,
        password=nothing,
        created_at=nothing,
        from_user=nothing,
        to_user=nothing,
    )

    - id::Int64
    - model_id::String
    - model_name::String
    - password::String
    - created_at::ZonedDateTime
    - from_user::String
    - to_user::String
"""
Base.@kwdef mutable struct CreateModelShareRsp <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = nothing
    model_id::Union{Nothing, String} = nothing
    model_name::Union{Nothing, String} = nothing
    password::Union{Nothing, String} = nothing
    created_at::Union{Nothing, ZonedDateTime} = nothing
    from_user::Union{Nothing, String} = nothing
    to_user::Union{Nothing, String} = nothing

    function CreateModelShareRsp(id, model_id, model_name, password, created_at, from_user, to_user, )
        OpenAPI.validate_property(CreateModelShareRsp, Symbol("id"), id)
        OpenAPI.validate_property(CreateModelShareRsp, Symbol("model_id"), model_id)
        OpenAPI.validate_property(CreateModelShareRsp, Symbol("model_name"), model_name)
        OpenAPI.validate_property(CreateModelShareRsp, Symbol("password"), password)
        OpenAPI.validate_property(CreateModelShareRsp, Symbol("created_at"), created_at)
        OpenAPI.validate_property(CreateModelShareRsp, Symbol("from_user"), from_user)
        OpenAPI.validate_property(CreateModelShareRsp, Symbol("to_user"), to_user)
        return new(id, model_id, model_name, password, created_at, from_user, to_user, )
    end
end # type CreateModelShareRsp

const _property_types_CreateModelShareRsp = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("model_id")=>"String", Symbol("model_name")=>"String", Symbol("password")=>"String", Symbol("created_at")=>"ZonedDateTime", Symbol("from_user")=>"String", Symbol("to_user")=>"String", )
OpenAPI.property_type(::Type{ CreateModelShareRsp }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreateModelShareRsp[name]))}

function check_required(o::CreateModelShareRsp)
    o.id === nothing && (return false)
    o.model_id === nothing && (return false)
    o.model_name === nothing && (return false)
    o.password === nothing && (return false)
    o.created_at === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ CreateModelShareRsp }, name::Symbol, val)





    if name === Symbol("created_at")
        OpenAPI.validate_param(name, "CreateModelShareRsp", :format, val, "date-time")
    end


end
