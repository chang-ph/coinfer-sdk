# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DataTyping

    DataTyping(;
        iteration=nothing,
        vars=nothing,
    )

    - iteration::Dict{String, Vector{Any}}
    - vars::Dict{String, Dict{String, Vector{Any}}}
"""
Base.@kwdef mutable struct DataTyping <: OpenAPI.APIModel
    iteration::Union{Nothing, Dict{String, Vector{Any}}} = nothing
    vars::Union{Nothing, Dict{String, Dict{String, Vector{Any}}}} = nothing

    function DataTyping(iteration, vars, )
        OpenAPI.validate_property(DataTyping, Symbol("iteration"), iteration)
        OpenAPI.validate_property(DataTyping, Symbol("vars"), vars)
        return new(iteration, vars, )
    end
end # type DataTyping

const _property_types_DataTyping = Dict{Symbol,String}(Symbol("iteration")=>"Dict{String, Vector{Any}}", Symbol("vars")=>"Dict{String, Dict{String, Vector{Any}}}", )
OpenAPI.property_type(::Type{ DataTyping }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DataTyping[name]))}

function check_required(o::DataTyping)
    o.iteration === nothing && (return false)
    o.vars === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ DataTyping }, name::Symbol, val)


end