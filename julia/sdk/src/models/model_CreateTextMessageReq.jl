# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CreateTextMessageReq

    CreateTextMessageReq(;
        object_type=nothing,
        datas=nothing,
        batch_id=nothing,
        run_id=nothing,
    )

    - object_type::String
    - datas::Vector{Dict{String, Any}} : list of messages
    - batch_id::String
    - run_id::String
"""
Base.@kwdef mutable struct CreateTextMessageReq <: OpenAPI.APIModel
    object_type::Union{Nothing, String} = nothing
    datas::Union{Nothing, Vector{Dict{String, Any}}} = nothing
    batch_id::Union{Nothing, String} = nothing
    run_id::Union{Nothing, String} = nothing

    function CreateTextMessageReq(object_type, datas, batch_id, run_id, )
        OpenAPI.validate_property(CreateTextMessageReq, Symbol("object_type"), object_type)
        OpenAPI.validate_property(CreateTextMessageReq, Symbol("datas"), datas)
        OpenAPI.validate_property(CreateTextMessageReq, Symbol("batch_id"), batch_id)
        OpenAPI.validate_property(CreateTextMessageReq, Symbol("run_id"), run_id)
        return new(object_type, datas, batch_id, run_id, )
    end
end # type CreateTextMessageReq

const _property_types_CreateTextMessageReq = Dict{Symbol,String}(Symbol("object_type")=>"String", Symbol("datas")=>"Vector{Dict{String, Any}}", Symbol("batch_id")=>"String", Symbol("run_id")=>"String", )
OpenAPI.property_type(::Type{ CreateTextMessageReq }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreateTextMessageReq[name]))}

function check_required(o::CreateTextMessageReq)
    o.object_type === nothing && (return false)
    o.datas === nothing && (return false)
    o.batch_id === nothing && (return false)
    o.run_id === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ CreateTextMessageReq }, name::Symbol, val)

    if name === Symbol("object_type")
        OpenAPI.validate_param(name, "CreateTextMessageReq", :enum, val, ["experiment.text_message"])
    end




end