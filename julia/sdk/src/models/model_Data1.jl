# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.



@doc raw"""Data_1

    Data1(; value=nothing)
"""
mutable struct Data1 <: OpenAPI.OneOfAPIModel
    value::Any # Union{ ExperimentRsp, ViewExperimentShareRsp, ViewModelsRsp }
    Data1() = new()
    Data1(value) = new(value)
end # type Data1

function OpenAPI.property_type(::Type{ Data1 }, name::Symbol, json::Dict{String,Any})
    discriminator = json["object_type"]
    if discriminator == "experiment"
        return eval(Base.Meta.parse("ExperimentRsp"))
    elseif discriminator == "model"
        return eval(Base.Meta.parse("ViewModelsRsp"))
    elseif discriminator == "share"
        return eval(Base.Meta.parse("ViewExperimentShareRsp"))
    end
    throw(OpenAPI.ValidationException("Invalid discriminator value: $discriminator for Data1"))
end
