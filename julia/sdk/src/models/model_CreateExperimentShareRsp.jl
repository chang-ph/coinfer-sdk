# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CreateExperimentShareRsp

    CreateExperimentShareRsp(;
        object_type=nothing,
        id=nothing,
        user_id=nothing,
        short_id=nothing,
        experiment_id=nothing,
        experiment_name=nothing,
        password=nothing,
        created_at=nothing,
        from_user=nothing,
        to_user=nothing,
    )

    - object_type::String
    - id::Int64
    - user_id::Int64
    - short_id::String
    - experiment_id::String
    - experiment_name::String
    - password::String
    - created_at::ZonedDateTime
    - from_user::String
    - to_user::String
"""
Base.@kwdef mutable struct CreateExperimentShareRsp <: OpenAPI.APIModel
    object_type::Union{Nothing, String} = nothing
    id::Union{Nothing, Int64} = nothing
    user_id::Union{Nothing, Int64} = nothing
    short_id::Union{Nothing, String} = nothing
    experiment_id::Union{Nothing, String} = nothing
    experiment_name::Union{Nothing, String} = nothing
    password::Union{Nothing, String} = nothing
    created_at::Union{Nothing, ZonedDateTime} = nothing
    from_user::Union{Nothing, String} = nothing
    to_user::Union{Nothing, String} = nothing

    function CreateExperimentShareRsp(object_type, id, user_id, short_id, experiment_id, experiment_name, password, created_at, from_user, to_user, )
        OpenAPI.validate_property(CreateExperimentShareRsp, Symbol("object_type"), object_type)
        OpenAPI.validate_property(CreateExperimentShareRsp, Symbol("id"), id)
        OpenAPI.validate_property(CreateExperimentShareRsp, Symbol("user_id"), user_id)
        OpenAPI.validate_property(CreateExperimentShareRsp, Symbol("short_id"), short_id)
        OpenAPI.validate_property(CreateExperimentShareRsp, Symbol("experiment_id"), experiment_id)
        OpenAPI.validate_property(CreateExperimentShareRsp, Symbol("experiment_name"), experiment_name)
        OpenAPI.validate_property(CreateExperimentShareRsp, Symbol("password"), password)
        OpenAPI.validate_property(CreateExperimentShareRsp, Symbol("created_at"), created_at)
        OpenAPI.validate_property(CreateExperimentShareRsp, Symbol("from_user"), from_user)
        OpenAPI.validate_property(CreateExperimentShareRsp, Symbol("to_user"), to_user)
        return new(object_type, id, user_id, short_id, experiment_id, experiment_name, password, created_at, from_user, to_user, )
    end
end # type CreateExperimentShareRsp

const _property_types_CreateExperimentShareRsp = Dict{Symbol,String}(Symbol("object_type")=>"String", Symbol("id")=>"Int64", Symbol("user_id")=>"Int64", Symbol("short_id")=>"String", Symbol("experiment_id")=>"String", Symbol("experiment_name")=>"String", Symbol("password")=>"String", Symbol("created_at")=>"ZonedDateTime", Symbol("from_user")=>"String", Symbol("to_user")=>"String", )
OpenAPI.property_type(::Type{ CreateExperimentShareRsp }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreateExperimentShareRsp[name]))}

function check_required(o::CreateExperimentShareRsp)
    o.object_type === nothing && (return false)
    o.id === nothing && (return false)
    o.user_id === nothing && (return false)
    o.short_id === nothing && (return false)
    o.experiment_id === nothing && (return false)
    o.experiment_name === nothing && (return false)
    o.password === nothing && (return false)
    o.created_at === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ CreateExperimentShareRsp }, name::Symbol, val)

    if name === Symbol("object_type")
        OpenAPI.validate_param(name, "CreateExperimentShareRsp", :enum, val, ["share"])
    end








    if name === Symbol("created_at")
        OpenAPI.validate_param(name, "CreateExperimentShareRsp", :format, val, "date-time")
    end


end
