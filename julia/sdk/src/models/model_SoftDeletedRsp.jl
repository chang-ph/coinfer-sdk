# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SoftDeletedRsp

    SoftDeletedRsp(;
        deleted_key=nothing,
    )

    - deleted_key::String
"""
Base.@kwdef mutable struct SoftDeletedRsp <: OpenAPI.APIModel
    deleted_key::Union{Nothing, String} = nothing

    function SoftDeletedRsp(deleted_key, )
        OpenAPI.validate_property(SoftDeletedRsp, Symbol("deleted_key"), deleted_key)
        return new(deleted_key, )
    end
end # type SoftDeletedRsp

const _property_types_SoftDeletedRsp = Dict{Symbol,String}(Symbol("deleted_key")=>"String", )
OpenAPI.property_type(::Type{ SoftDeletedRsp }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SoftDeletedRsp[name]))}

function check_required(o::SoftDeletedRsp)
    o.deleted_key === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ SoftDeletedRsp }, name::Symbol, val)

    if name === Symbol("deleted_key")
        OpenAPI.validate_param(name, "SoftDeletedRsp", :format, val, "uuid")
    end
end
