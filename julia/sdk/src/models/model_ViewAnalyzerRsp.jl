# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ViewAnalyzerRsp

    ViewAnalyzerRsp(;
        object_type=nothing,
        url=nothing,
    )

    - object_type::String
    - url::String
"""
Base.@kwdef mutable struct ViewAnalyzerRsp <: OpenAPI.APIModel
    object_type::Union{Nothing, String} = nothing
    url::Union{Nothing, String} = nothing

    function ViewAnalyzerRsp(object_type, url, )
        OpenAPI.validate_property(ViewAnalyzerRsp, Symbol("object_type"), object_type)
        OpenAPI.validate_property(ViewAnalyzerRsp, Symbol("url"), url)
        return new(object_type, url, )
    end
end # type ViewAnalyzerRsp

const _property_types_ViewAnalyzerRsp = Dict{Symbol,String}(Symbol("object_type")=>"String", Symbol("url")=>"String", )
OpenAPI.property_type(::Type{ ViewAnalyzerRsp }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ViewAnalyzerRsp[name]))}

function check_required(o::ViewAnalyzerRsp)
    o.object_type === nothing && (return false)
    o.url === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ViewAnalyzerRsp }, name::Symbol, val)

    if name === Symbol("object_type")
        OpenAPI.validate_param(name, "ViewAnalyzerRsp", :enum, val, ["workflow.analyzer"])
    end


end