# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ErrRsp

    ErrRsp(;
        status=nothing,
        code=nothing,
        message=nothing,
    )

    - status::String
    - code::String
    - message::String
"""
Base.@kwdef mutable struct ErrRsp <: OpenAPI.APIModel
    status::Union{Nothing, String} = nothing
    code::Union{Nothing, String} = nothing
    message::Union{Nothing, String} = nothing

    function ErrRsp(status, code, message, )
        OpenAPI.validate_property(ErrRsp, Symbol("status"), status)
        OpenAPI.validate_property(ErrRsp, Symbol("code"), code)
        OpenAPI.validate_property(ErrRsp, Symbol("message"), message)
        return new(status, code, message, )
    end
end # type ErrRsp

const _property_types_ErrRsp = Dict{Symbol,String}(Symbol("status")=>"String", Symbol("code")=>"String", Symbol("message")=>"String", )
OpenAPI.property_type(::Type{ ErrRsp }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ErrRsp[name]))}

function check_required(o::ErrRsp)
    o.status === nothing && (return false)
    o.code === nothing && (return false)
    o.message === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ErrRsp }, name::Symbol, val)

    if name === Symbol("status")
        OpenAPI.validate_param(name, "ErrRsp", :enum, val, ["error"])
    end



end