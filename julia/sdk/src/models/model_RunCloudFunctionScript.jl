# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RunCloudFunctionScript

    RunCloudFunctionScript(;
        object_type=nothing,
        params="",
        engine="lambda",
        lock_key="",
    )

    - object_type::String
    - params::String
    - engine::String
    - lock_key::String
"""
Base.@kwdef mutable struct RunCloudFunctionScript <: OpenAPI.APIModel
    object_type::Union{Nothing, String} = nothing
    params::Union{Nothing, String} = ""
    engine::Union{Nothing, String} = "lambda"
    lock_key::Union{Nothing, String} = ""

    function RunCloudFunctionScript(object_type, params, engine, lock_key, )
        OpenAPI.validate_property(RunCloudFunctionScript, Symbol("object_type"), object_type)
        OpenAPI.validate_property(RunCloudFunctionScript, Symbol("params"), params)
        OpenAPI.validate_property(RunCloudFunctionScript, Symbol("engine"), engine)
        OpenAPI.validate_property(RunCloudFunctionScript, Symbol("lock_key"), lock_key)
        return new(object_type, params, engine, lock_key, )
    end
end # type RunCloudFunctionScript

const _property_types_RunCloudFunctionScript = Dict{Symbol,String}(Symbol("object_type")=>"String", Symbol("params")=>"String", Symbol("engine")=>"String", Symbol("lock_key")=>"String", )
OpenAPI.property_type(::Type{ RunCloudFunctionScript }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RunCloudFunctionScript[name]))}

function check_required(o::RunCloudFunctionScript)
    o.object_type === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ RunCloudFunctionScript }, name::Symbol, val)

    if name === Symbol("object_type")
        OpenAPI.validate_param(name, "RunCloudFunctionScript", :enum, val, ["model.run_script"])
    end



    if name === Symbol("engine")
        OpenAPI.validate_param(name, "RunCloudFunctionScript", :enum, val, ["lambda", "fargate"])
    end


end
