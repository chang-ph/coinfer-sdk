# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ListGitHubRepository

    ListGitHubRepository(;
        page_no=1,
        page_size=100,
    )

    - page_no::Int64 : page number
    - page_size::Int64 : page size
"""
Base.@kwdef mutable struct ListGitHubRepository <: OpenAPI.APIModel
    page_no::Union{Nothing, Int64} = 1
    page_size::Union{Nothing, Int64} = 100

    function ListGitHubRepository(page_no, page_size, )
        OpenAPI.validate_property(ListGitHubRepository, Symbol("page_no"), page_no)
        OpenAPI.validate_property(ListGitHubRepository, Symbol("page_size"), page_size)
        return new(page_no, page_size, )
    end
end # type ListGitHubRepository

const _property_types_ListGitHubRepository = Dict{Symbol,String}(Symbol("page_no")=>"Int64", Symbol("page_size")=>"Int64", )
OpenAPI.property_type(::Type{ ListGitHubRepository }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ListGitHubRepository[name]))}

function check_required(o::ListGitHubRepository)
    true
end

function OpenAPI.validate_property(::Type{ ListGitHubRepository }, name::Symbol, val)


    if name === Symbol("page_size")
        OpenAPI.validate_param(name, "ListGitHubRepository", :maximum, val, 1000, false)
    end
end
