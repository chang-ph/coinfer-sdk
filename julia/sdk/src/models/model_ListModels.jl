# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ListModels

    ListModels(;
        page_no=1,
        page_size=100,
        model_ids=nothing,
        with_share_info=false,
        shared_by_me=false,
        shared_with_me=false,
    )

    - page_no::Int64 : page number
    - page_size::Int64 : page size
    - model_ids::Vector{String}
    - with_share_info::Bool : Whether to return the related share info
    - shared_by_me::Bool : Filter models shared by the current user
    - shared_with_me::Bool : Filter models shared with the current user
"""
Base.@kwdef mutable struct ListModels <: OpenAPI.APIModel
    page_no::Union{Nothing, Int64} = 1
    page_size::Union{Nothing, Int64} = 100
    model_ids::Union{Nothing, Vector{String}} = nothing
    with_share_info::Union{Nothing, Bool} = false
    shared_by_me::Union{Nothing, Bool} = false
    shared_with_me::Union{Nothing, Bool} = false

    function ListModels(page_no, page_size, model_ids, with_share_info, shared_by_me, shared_with_me, )
        OpenAPI.validate_property(ListModels, Symbol("page_no"), page_no)
        OpenAPI.validate_property(ListModels, Symbol("page_size"), page_size)
        OpenAPI.validate_property(ListModels, Symbol("model_ids"), model_ids)
        OpenAPI.validate_property(ListModels, Symbol("with_share_info"), with_share_info)
        OpenAPI.validate_property(ListModels, Symbol("shared_by_me"), shared_by_me)
        OpenAPI.validate_property(ListModels, Symbol("shared_with_me"), shared_with_me)
        return new(page_no, page_size, model_ids, with_share_info, shared_by_me, shared_with_me, )
    end
end # type ListModels

const _property_types_ListModels = Dict{Symbol,String}(Symbol("page_no")=>"Int64", Symbol("page_size")=>"Int64", Symbol("model_ids")=>"Vector{String}", Symbol("with_share_info")=>"Bool", Symbol("shared_by_me")=>"Bool", Symbol("shared_with_me")=>"Bool", )
OpenAPI.property_type(::Type{ ListModels }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ListModels[name]))}

function check_required(o::ListModels)
    true
end

function OpenAPI.validate_property(::Type{ ListModels }, name::Symbol, val)


    if name === Symbol("page_size")
        OpenAPI.validate_param(name, "ListModels", :maximum, val, 1000, false)
    end




end
