# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ModifyToken

    ModifyToken(;
        name=nothing,
        desc=nothing,
        expire=nothing,
    )

    - name::String
    - desc::String
    - expire::ZonedDateTime
"""
Base.@kwdef mutable struct ModifyToken <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    desc::Union{Nothing, String} = nothing
    expire::Union{Nothing, ZonedDateTime} = nothing

    function ModifyToken(name, desc, expire, )
        OpenAPI.validate_property(ModifyToken, Symbol("name"), name)
        OpenAPI.validate_property(ModifyToken, Symbol("desc"), desc)
        OpenAPI.validate_property(ModifyToken, Symbol("expire"), expire)
        return new(name, desc, expire, )
    end
end # type ModifyToken

const _property_types_ModifyToken = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("desc")=>"String", Symbol("expire")=>"ZonedDateTime", )
OpenAPI.property_type(::Type{ ModifyToken }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ModifyToken[name]))}

function check_required(o::ModifyToken)
    true
end

function OpenAPI.validate_property(::Type{ ModifyToken }, name::Symbol, val)



    if name === Symbol("expire")
        OpenAPI.validate_param(name, "ModifyToken", :format, val, "date-time")
    end
end