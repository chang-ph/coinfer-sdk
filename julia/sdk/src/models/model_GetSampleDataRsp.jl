# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GetSampleDataRsp

    GetSampleDataRsp(;
        url=nothing,
        progress=nothing,
        message="",
    )

    - url::String
    - progress::String
    - message::String
"""
Base.@kwdef mutable struct GetSampleDataRsp <: OpenAPI.APIModel
    url::Union{Nothing, String} = nothing
    progress::Union{Nothing, String} = nothing
    message::Union{Nothing, String} = ""

    function GetSampleDataRsp(url, progress, message, )
        OpenAPI.validate_property(GetSampleDataRsp, Symbol("url"), url)
        OpenAPI.validate_property(GetSampleDataRsp, Symbol("progress"), progress)
        OpenAPI.validate_property(GetSampleDataRsp, Symbol("message"), message)
        return new(url, progress, message, )
    end
end # type GetSampleDataRsp

const _property_types_GetSampleDataRsp = Dict{Symbol,String}(Symbol("url")=>"String", Symbol("progress")=>"String", Symbol("message")=>"String", )
OpenAPI.property_type(::Type{ GetSampleDataRsp }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetSampleDataRsp[name]))}

function check_required(o::GetSampleDataRsp)
    o.progress === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetSampleDataRsp }, name::Symbol, val)


    if name === Symbol("progress")
        OpenAPI.validate_param(name, "GetSampleDataRsp", :enum, val, ["generating", "done"])
    end


end
