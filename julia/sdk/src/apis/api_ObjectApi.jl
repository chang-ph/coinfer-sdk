# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct ObjectApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `ObjectApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ ObjectApi }) = "https://api.coinfer.ai"

const _returntypes_create_object_ObjectApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => SuccRspAnnotatedUnionExperimentRspListModelsRspItemCreateExperimentShareRspCreateEventRspCreateCallbackRspCreateRelationRspFieldInfoAnnotationNoneTypeRequiredTrueDiscriminatorObjectType,
    Regex("^" * replace("400", "x"=>".") * "\$") => ErrRsp,
)

function _oacinternal_create_object(_api::ObjectApi, create_object_req::CreateObjectReq; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_object_ObjectApi, "/api/object", ["GlobalAuth", ], create_object_req)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Create new object.

Create new object.  ### Example Create model: ``` POST /api/object {     \"payload\": {         \"object_type\": \"model\",         \"name\": \"model name\",         \"type\": \"local\",         \"content\": {             \"meta\": {\"entrance_file\": \"main.jl\"},             \"tree\": [],         }     } } ```  Create model from GitHub repo: ``` POST /api/object {     \"payload\": {         \"object_type\": \"model\",         \"repo\": \"vectorly-ai/simple-model\",         \"branch\": \"main\",         \"type\": \"repo\",     } } ```  Create model from GitHub gist: ``` POST /api/object {     \"payload\": {         \"object_type\": \"model\",         \"repo\": \"<the-gist-id>\",         \"type\": \"gist\",     } } ```  Create experiment: ``` POST /api/object {     \"payload\": {         \"object_type\": \"experiment\",         \"name\": \"experiment name\",         \"model_id\": \"M1234567\",     } } ```  Create share of experiment: ``` POST /api/object {     \"payload\": {         \"object_type\": \"share\",         \"objid\": \"X1234567\",         \"password\": \"the-pass\",     } } ```

Params:
- create_object_req::CreateObjectReq (required)

Return: SuccRspAnnotatedUnionExperimentRspListModelsRspItemCreateExperimentShareRspCreateEventRspCreateCallbackRspCreateRelationRspFieldInfoAnnotationNoneTypeRequiredTrueDiscriminatorObjectType, OpenAPI.Clients.ApiResponse
"""
function create_object(_api::ObjectApi, create_object_req::CreateObjectReq; _mediaType=nothing)
    _ctx = _oacinternal_create_object(_api, create_object_req; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_object(_api::ObjectApi, response_stream::Channel, create_object_req::CreateObjectReq; _mediaType=nothing)
    _ctx = _oacinternal_create_object(_api, create_object_req; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_delete_object_ObjectApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => SuccRspSoftDeletedRsp,
    Regex("^" * replace("400", "x"=>".") * "\$") => ErrRsp,
)

function _oacinternal_delete_object(_api::ObjectApi; objids=nothing, deleted_key=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_delete_object_ObjectApi, "/api/object", ["GlobalAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "objids", objids; style="form", is_explode=true)  # type Vector{String}
    OpenAPI.Clients.set_param(_ctx.query, "deleted_key", deleted_key; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete objects.

Delete objects of certain IDs in batch.  ### Example  ``` DELETE /api/object?objids=M1234567&objids=X1234567 ```

Params:
- objids::Vector{String}
- deleted_key::String

Return: SuccRspSoftDeletedRsp, OpenAPI.Clients.ApiResponse
"""
function delete_object(_api::ObjectApi; objids=nothing, deleted_key=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_object(_api; objids=objids, deleted_key=deleted_key, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function delete_object(_api::ObjectApi, response_stream::Channel; objids=nothing, deleted_key=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delete_object(_api; objids=objids, deleted_key=deleted_key, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_object_ObjectApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => SuccRspListingRspDataUnionListExperimentRspListModelsRspItemCreateEventRspCreateCallbackRspCreateRelationRsp,
    Regex("^" * replace("400", "x"=>".") * "\$") => ErrRsp,
)

function _oacinternal_list_object(_api::ObjectApi, object_type::String; page_no=nothing, page_size=nothing, with_share_info=nothing, shared_by_me=nothing, shared_with_me=nothing, model_ids=nothing, status=nothing, run_on=nothing, has_model=nothing, tags=nothing, _mediaType=nothing)
    OpenAPI.validate_param("page_size", "list_object", :maximum, page_size, 1000, false)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_object_ObjectApi, "/api/object", ["GlobalAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "page_no", page_no; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "page_size", page_size; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "object_type", object_type; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "with_share_info", with_share_info; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "shared_by_me", shared_by_me; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "shared_with_me", shared_with_me; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "model_ids", model_ids; style="form", is_explode=true)  # type Vector{String}
    OpenAPI.Clients.set_param(_ctx.query, "status", status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "run_on", run_on; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "has_model", has_model; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "tags", tags; style="form", is_explode=true)  # type Vector{String}
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""List objects.

### List Objects  By default, the API returns only objects created by the current user, excluding sharing information for performance optimization.  When `shared_with_me` is enabled, the API returns objects owned by other users but shared with the current user, including their sharing details.  Enabling `shared_by_me` will include sharing information for objects that the current user has shared with others.  Setting `with_share_info` to true combines both scenarios: it returns objects shared by the current user as well as objects shared with the current user, complete with their respective sharing information. This effectively merges the functionality of both `shared_by_me` and `shared_with_me`.  ### Example  List models: ``` GET /api/object?object_type=model GET /api/object?object_type=model&shared_by_me=true GET /api/object?object_type=model&shared_with_me=true GET /api/object?object_type=model&with_share_info=true ```  List experiments: ``` GET /api/object?object_type=experiment GET /api/object?object_type=experiment&shared_by_me=true GET /api/object?object_type=experiment&shared_with_me=true GET /api/object?object_type=experiment&with_share_info=true ```

Params:
- object_type::String (required)
- page_no::Int64
- page_size::Int64
- with_share_info::Bool
- shared_by_me::Bool
- shared_with_me::Bool
- model_ids::Vector{String}
- status::String
- run_on::String
- has_model::String
- tags::Vector{String}

Return: SuccRspListingRspDataUnionListExperimentRspListModelsRspItemCreateEventRspCreateCallbackRspCreateRelationRsp, OpenAPI.Clients.ApiResponse
"""
function list_object(_api::ObjectApi, object_type::String; page_no=nothing, page_size=nothing, with_share_info=nothing, shared_by_me=nothing, shared_with_me=nothing, model_ids=nothing, status=nothing, run_on=nothing, has_model=nothing, tags=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_object(_api, object_type; page_no=page_no, page_size=page_size, with_share_info=with_share_info, shared_by_me=shared_by_me, shared_with_me=shared_with_me, model_ids=model_ids, status=status, run_on=run_on, has_model=has_model, tags=tags, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_object(_api::ObjectApi, response_stream::Channel, object_type::String; page_no=nothing, page_size=nothing, with_share_info=nothing, shared_by_me=nothing, shared_with_me=nothing, model_ids=nothing, status=nothing, run_on=nothing, has_model=nothing, tags=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_object(_api, object_type; page_no=page_no, page_size=page_size, with_share_info=with_share_info, shared_by_me=shared_by_me, shared_with_me=shared_with_me, model_ids=model_ids, status=status, run_on=run_on, has_model=has_model, tags=tags, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_update_object_ObjectApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => SuccRspUnionExperimentRspViewModelsRspNoneType,
    Regex("^" * replace("400", "x"=>".") * "\$") => ErrRsp,
)

function _oacinternal_update_object(_api::ObjectApi, objid::String, update_object_param::UpdateObject; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_update_object_ObjectApi, "/api/object/{objid}", ["GlobalAuth", ], update_object_param)
    OpenAPI.Clients.set_param(_ctx.path, "objid", objid)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Update object.

Update object of certain ID.  ### Example  Update model: ``` POST /api/object/M1234567  {     \"payload\": {         \"object_type\": \"model\",         \"name\": \"model name\",         \"content\": {             \"meta\": {\"entrance_file\": \"main.jl\"},             \"tree\": [],         }     } } ```  Update experiment: ``` POST /api/object/X1234567  {     \"payload\": {         \"object_type\": \"experiment\",         \"name\": \"experiment name\",     } } ```

Params:
- objid::String (required)
- update_object_param::UpdateObject (required)

Return: SuccRspUnionExperimentRspViewModelsRspNoneType, OpenAPI.Clients.ApiResponse
"""
function update_object(_api::ObjectApi, objid::String, update_object_param::UpdateObject; _mediaType=nothing)
    _ctx = _oacinternal_update_object(_api, objid, update_object_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function update_object(_api::ObjectApi, response_stream::Channel, objid::String, update_object_param::UpdateObject; _mediaType=nothing)
    _ctx = _oacinternal_update_object(_api, objid, update_object_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_view_object_ObjectApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => SuccRspAnnotatedUnionExperimentRspViewModelsRspViewExperimentShareRspExperimentSampleDataRspExperimentCloudwatchLogRspGetExperimentRunInfoRspExperimentPlotRspFieldInfoAnnotationNoneTypeRequiredTrueDiscriminatorObjectType,
    Regex("^" * replace("400", "x"=>".") * "\$") => ErrRsp,
)

function _oacinternal_view_object(_api::ObjectApi, objid::String; object_type=nothing, share_id=nothing, sampledata=nothing, fmt=nothing, n_iteration=nothing, cloudwatch_log=nothing, batch_id=nothing, run_id=nothing, plot=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_view_object_ObjectApi, "/api/object/{objid}", ["GlobalAuth", "SharingAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "objid", objid)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "object_type", object_type; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "share_id", share_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "sampledata", sampledata; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "fmt", fmt; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "n_iteration", n_iteration; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "cloudwatch_log", cloudwatch_log; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "batch_id", batch_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "run_id", run_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "plot", plot; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""View object.

View object of certain ID.  ### Example  ``` GET /api/object/M1234567  # view model data GET /api/object/X1234567  # view experiment data GET /api/object/S1234566  # view share data ```

Params:
- objid::String (required)
- object_type::String
- share_id::String
- sampledata::Bool
- fmt::String
- n_iteration::Int64
- cloudwatch_log::Bool
- batch_id::String
- run_id::String
- plot::Bool

Return: SuccRspAnnotatedUnionExperimentRspViewModelsRspViewExperimentShareRspExperimentSampleDataRspExperimentCloudwatchLogRspGetExperimentRunInfoRspExperimentPlotRspFieldInfoAnnotationNoneTypeRequiredTrueDiscriminatorObjectType, OpenAPI.Clients.ApiResponse
"""
function view_object(_api::ObjectApi, objid::String; object_type=nothing, share_id=nothing, sampledata=nothing, fmt=nothing, n_iteration=nothing, cloudwatch_log=nothing, batch_id=nothing, run_id=nothing, plot=nothing, _mediaType=nothing)
    _ctx = _oacinternal_view_object(_api, objid; object_type=object_type, share_id=share_id, sampledata=sampledata, fmt=fmt, n_iteration=n_iteration, cloudwatch_log=cloudwatch_log, batch_id=batch_id, run_id=run_id, plot=plot, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function view_object(_api::ObjectApi, response_stream::Channel, objid::String; object_type=nothing, share_id=nothing, sampledata=nothing, fmt=nothing, n_iteration=nothing, cloudwatch_log=nothing, batch_id=nothing, run_id=nothing, plot=nothing, _mediaType=nothing)
    _ctx = _oacinternal_view_object(_api, objid; object_type=object_type, share_id=share_id, sampledata=sampledata, fmt=fmt, n_iteration=n_iteration, cloudwatch_log=cloudwatch_log, batch_id=batch_id, run_id=run_id, plot=plot, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export create_object
export delete_object
export list_object
export update_object
export view_object
