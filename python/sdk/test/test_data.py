# coding: utf-8

"""
    Coinfer Server API

     This part of document describes the HTTP APIs of the Coinfer cloud.  

    The version of the OpenAPI document: 0.0.1750043996+d001fcd
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.data import Data

class TestData(unittest.TestCase):
    """Data unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Data:
        """Test Data
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Data`
        """
        model = Data()
        if include_optional:
            return Data(
                object_type = 'relation',
                short_id = '',
                name = '',
                model_id = '',
                status = '',
                meta = openapi_client.models._model_meta_in_rsp._ModelMetaInRsp(
                    github = '', 
                    commit_id = '', ),
                n_chains = 56,
                n_variables = 56,
                n_samples = 56,
                sample_update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                run_on = '',
                input = '',
                output = '',
                share_info = [
                    openapi_client.models.share_info_model.ShareInfoModel(
                        id = 56, 
                        password = '', 
                        user_id = '', 
                        to_user_id = '', )
                    ],
                model_name = '',
                id = 56,
                env = '',
                content = None,
                user_id = 56,
                experiment_id = '',
                experiment_name = '',
                password = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                from_user = '',
                to_user = '',
                lang = '',
                code = '',
                token = '',
                object1_id = '',
                object2_id = ''
            )
        else:
            return Data(
                object_type = 'relation',
                short_id = '',
                name = '',
                meta = openapi_client.models._model_meta_in_rsp._ModelMetaInRsp(
                    github = '', 
                    commit_id = '', ),
                model_name = '',
                id = 56,
                env = '',
                user_id = 56,
                experiment_id = '',
                experiment_name = '',
                password = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                lang = '',
                code = '',
                token = '',
                object1_id = '',
                object2_id = '',
        )
        """

    def testData(self):
        """Test Data"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
