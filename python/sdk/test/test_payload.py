# coding: utf-8

"""
    Coinfer Server API

     This part of document describes the HTTP APIs of the Coinfer cloud.  

    The version of the OpenAPI document: 0.0.1749690162+d456f22
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.payload import Payload

class TestPayload(unittest.TestCase):
    """Payload unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Payload:
        """Test Payload
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Payload`
        """
        model = Payload()
        if include_optional:
            return Payload(
                object_type = 'relation',
                repo = '',
                branch = '',
                type = 'local',
                model_name = '',
                env = '',
                name = '',
                content = openapi_client.models.model_content.ModelContent(
                    meta = null, 
                    tree = [
                        openapi_client.models.model_tree_node.ModelTreeNode(
                            name = '', 
                            type = 'file', 
                            children = [
                                openapi_client.models.model_tree_node.ModelTreeNode(
                                    name = '', 
                                    type = 'file', )
                                ], )
                        ], ),
                is_demo = True,
                kind = 'model',
                single_instance = True,
                lang = 'julia',
                entrance_file = '',
                model_id = '',
                xp_meta = None,
                meta = None,
                data_files = [
                    ''
                    ],
                objid = '',
                password = '',
                target_user = '',
                code = '',
                object1_id = '',
                object2_id = ''
            )
        else:
            return Payload(
                object_type = 'relation',
                name = '',
                lang = 'julia',
                objid = '',
                code = '',
                object1_id = '',
                object2_id = '',
        )
        """

    def testPayload(self):
        """Test Payload"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
